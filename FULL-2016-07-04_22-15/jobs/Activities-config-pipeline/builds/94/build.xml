<?xml version='1.0' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.3">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.triggers.SCMTrigger_-SCMTriggerCause/>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.triggers.SCMTrigger_-BuildAction/>
    <hudson.plugins.git.util.BuildData plugin="git@2.5.0">
      <buildsByBranchName>
        <entry>
          <string>origin/mhz-snapshot</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@1.19.6">
              <sha1>3b50e4a21ddba784bfd3254db12f76d77b91a279</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/mhz-snapshot</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@1.19.6">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>17</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>origin/mhz-create</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@1.19.6">
              <sha1>a2bdcf9e052c1554230bccd38a3ddb5334018909</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/mhz-create</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@1.19.6">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>2</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>origin/mhz-jenkins</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@1.19.6">
              <sha1>14b0b7442e4ede76f972979cf38d656318ed6e3d</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/mhz-jenkins</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@1.19.6">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>8</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>origin/mhz-1.0.0</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@1.19.6">
              <sha1>162ea46a49c9d45dc23182b268c8916e21775038</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/mhz-1.0.0</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>94</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry[4]/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/mahanhz/activities-config-microservice.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@2.5.0">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>origin/mhz-1.0.0</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/lib/jenkins/workspace/Activities-config-pipeline@script</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.1">
      <revisionStates>
        <entry>
          <string>git https://github.com/mahanhz/activities-config-microservice.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.support.steps.input.InputAction plugin="pipeline-input-step@2.0">
      <ids class="java.util.concurrent.CopyOnWriteArrayList"/>
    </org.jenkinsci.plugins.workflow.support.steps.input.InputAction>
    <org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction plugin="pipeline-input-step@2.0">
      <userId>jenkins_admin</userId>
    </org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction>
  </actions>
  <queueId>214</queueId>
  <timestamp>1467651553966</timestamp>
  <startTime>1467651553970</startTime>
  <result>SUCCESS</result>
  <duration>440594</duration>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>#!groovy

COMMIT_ID = &quot;&quot;
SELECTED_SEMANTIC_VERSION_SEGMENT = &quot;patch&quot;

stage &apos;Build&apos;
node {
    checkout scm

    sh &apos;./gradlew clean build&apos;

    stash excludes: &apos;build/&apos;, includes: &apos;**&apos;, name: &apos;source&apos;

    // Obtaining commit id like this until JENKINS-26100 is implemented
    // See http://stackoverflow.com/questions/36304208/jenkins-workflow-checkout-accessing-branch-name-and-git-commit
    sh &apos;git rev-parse HEAD &gt; commit&apos;
    COMMIT_ID = readFile(&apos;commit&apos;).trim()
}

stage &apos;Integration test&apos;
node {
    unstash &apos;source&apos;
    sh &apos;chmod 755 gradlew&apos;
    sh &apos;./gradlew integrationTest&apos;
}

stage name: &apos;Merge&apos;, concurrency: 1
node {
    build job: &apos;Activities-config-merge&apos;, parameters: [[$class: &apos;GitParameterValue&apos;, name: &apos;GIT_COMMIT_ID&apos;, value: COMMIT_ID]]
}

stage name: &apos;Publish snapshot&apos;, concurrency: 1
node {
    unstash &apos;source&apos;
    sh &apos;chmod 755 gradlew&apos;
    sh &apos;./gradlew build snapshot uploadArchives -x test&apos;
}

stage &apos;Approve RC?&apos;
timeout(time: 1, unit: &apos;DAYS&apos;) {
    SELECTED_SEMANTIC_VERSION_SEGMENT =
    input message: &apos;Publish release candidate?&apos;,
    parameters: [[$class: &apos;ChoiceParameterDefinition&apos;,
                  choices: &apos;patch\nminor\nmajor&apos;,
                  description: &apos;Semantic version segment to update&apos;,
                  name: &apos;SEMANTIC_VERSION_SEGMENT&apos;]]
}

stage name: &apos;Publish RC&apos;, concurrency: 1
node {
    def currentVersion = version()
    build job: &apos;Activities-config-publish-release&apos;,
                  parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;CURRENT_VERSION&apos;, value: currentVersion],
                               [$class: &apos;StringParameterValue&apos;, name: &apos;SEMANTIC_VERSION_SEGMENT&apos;, value: SELECTED_SEMANTIC_VERSION_SEGMENT]]
}

def version() {
    def matcher = readFile(&apos;gradle.properties&apos;)
    matcher.replaceFirst(&apos;version=&apos;, &apos;&apos;)
}</script>
    <loadedScripts class="map"/>
    <sandbox>true</sandbox>
    <iota>48</iota>
    <head>1:48</head>
  </execution>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/mahanhz/activities-config-microservice.git</url>
            <credentialsId>620e1fdc-9ae7-4f9d-aa0f-701a3482ef49</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>:^(?!.*master).*$</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.BuildChooserSetting>
            <buildChooser class="hudson.plugins.git.util.AncestryBuildChooser">
              <ancestorCommitSha1></ancestorCommitSha1>
            </buildChooser>
          </hudson.plugins.git.extensions.impl.BuildChooserSetting>
          <hudson.plugins.git.extensions.impl.WipeWorkspace/>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Activities-config-pipeline@script</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Activities-config-pipeline/builds/94/changelog0.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/var/lib/jenkins/workspace/Activities-config-pipeline</workspace>
      <changelogFile>/var/lib/jenkins/jobs/Activities-config-pipeline/builds/94/changelog1.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>